/*
동적/공유 라이브러리는 런타임에 링크/로드되는 라이브러리입니다.

공유 라이브러리(Dynamic Linking)와 동적 라이브러리(Dynamic Loading)는
똑같이 런타임에 메모리에 적재되는데 공유 라이브러리는 응용 프로그램이 
시작되는 순간에 메모리에 적재되고 동적 라이브러리는 응용 프로그램이 
라이브러리의 내용이 필요할 때 적재하게 됩니다.

동적 라이브러리는 이를 사용하고자 하는 실행 바이너리에서 필요시 사용할 
수 있도록 최소한의 정보만 포함하여 링크하거나, 아예 독립적으로 
로드/사용/해제할 수 있습니다.
동적 라이브러리는 정적 라이브러리와 다르게 컴파일할 때 코드가 복사되지
 않고 프로그램 시작 시 로딩됩니다. 이때 메모리에 이미 로딩되어 있다면 
 라이브러리 코드 영역을 공유해서 사용할 수 있습니다.

이러한 특징 때문에 동적 라이브러리는 정적 라이브러리에 비해 프로그램의
 사이즈가 작고 메모리 공간을 적게 차지하는 장점이 있습니다.

하지만 라이브러리와 실행바이너리 사이의 연결 시간이 있기 때문에 정적 
라이브러리를 실행하는 것보다 느립니다.

또, 라이브러리를 수정하게 되면 라이브러리를 사용하는 실행파일을 다시 
컴파일 해야하는 정적 라이브러리와 다르게 동적 라이브러리는 라이브러리 
파일만 교체하여 적용할 수 있습니다. 단 함수의 인수 및 반환 값이 변경
되었으면 다시 링크시켜야 합니다.

동적 라이브러리의 코드는 메모리의 공유 라이브러리 영역에 저장됩니다.

//https://www.popit.kr/%EA%B3%B5%EC%9C%A0-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EC%99%80-%EB%A1%9C%EB%8D%94-loader-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0/
*/
